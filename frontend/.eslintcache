[{"E:\\Binance\\dexmatch\\frontend\\src\\App.js":"1","E:\\Binance\\dexmatch\\frontend\\src\\index.js":"2","E:\\Binance\\dexmatch\\frontend\\src\\reportWebVitals.js":"3","E:\\Binance\\dexmatch\\dapp\\src\\App.js":"4","E:\\Binance\\dexmatch\\dapp\\src\\reportWebVitals.js":"5","E:\\Binance\\dexmatch\\dapp\\src\\index.js":"6","E:\\Binance\\dexmatch\\dapp\\src\\components\\Toolbar.js":"7","E:\\Binance\\dexmatch\\dapp\\src\\containers\\Home.js":"8","E:\\Binance\\dexmatch\\dapp\\src\\containers\\Faucet.js":"9","E:\\Binance\\dexmatch\\dapp\\src\\containers\\Tokens.js":"10","E:\\Binance\\dexmatch\\dapp\\src\\assets\\Tokens.js":"11","E:\\Binance\\dexmatch\\dapp\\src\\containers\\Pairs.js":"12","E:\\Binance\\dexmatch\\dapp\\src\\web3\\connectors.js":"13","E:\\Binance\\dexmatch\\dapp\\src\\assets\\Exchange.js":"14","E:\\Binance\\dexmatch\\dapp\\src\\components\\BuySell.js":"15","E:\\Binance\\dexmatch\\dapp\\src\\components\\BuyOrderBook.js":"16","E:\\Binance\\dexmatch\\dapp\\src\\components\\SellOrderBook.js":"17","E:\\Binance\\dexmatch\\dapp\\src\\components\\WalletConnector.js":"18","E:\\Binance\\dexmatch\\dapp\\src\\components\\PairSelect.js":"19","E:\\Binance\\dexmatch\\dapp\\src\\components\\Front.js":"20","E:\\Binance\\dexmatch\\dapp\\src\\components\\UserOrders.js":"21","E:\\Binance\\binancedex\\frontend\\src\\index.js":"22","E:\\Binance\\binancedex\\frontend\\src\\containers\\Home.js":"23","E:\\Binance\\binancedex\\frontend\\src\\components\\Toolbar.js":"24","E:\\Binance\\binancedex\\frontend\\src\\containers\\Pairs.js":"25","E:\\Binance\\binancedex\\frontend\\src\\components\\WalletConnector.js":"26","E:\\Binance\\binancedex\\frontend\\src\\components\\UserOrders.js":"27","E:\\Binance\\binancedex\\frontend\\src\\components\\Front.js":"28","E:\\Binance\\binancedex\\frontend\\src\\components\\PairSelect.js":"29","E:\\Binance\\binancedex\\frontend\\src\\web3\\connectors.js":"30","E:\\Binance\\binancedex\\frontend\\src\\App.js":"31","E:\\Binance\\binancedex\\frontend\\src\\containers\\Tokens.js":"32","E:\\Binance\\binancedex\\frontend\\src\\components\\BuyOrderBook.js":"33","E:\\Binance\\binancedex\\frontend\\src\\components\\BuySell.js":"34","E:\\Binance\\binancedex\\frontend\\src\\assets\\Tokens.js":"35","E:\\Binance\\binancedex\\frontend\\src\\assets\\Exchange.js":"36","E:\\Binance\\binancedex\\frontend\\src\\components\\SellOrderBook.js":"37","E:\\Binance\\binancematch\\frontend\\src\\App.js":"38","E:\\Binance\\binancematch\\frontend\\src\\containers\\Faucet.js":"39","E:\\Binance\\binancematch\\frontend\\src\\components\\SellOrderBook.js":"40","E:\\Binance\\binancematch\\frontend\\src\\components\\PairSelect.js":"41","E:\\Binance\\binancematch\\frontend\\src\\components\\WalletConnector.js":"42","E:\\Binance\\binancematch\\frontend\\src\\containers\\Home.js":"43","E:\\Binance\\binancematch\\frontend\\src\\components\\BuySell.js":"44","E:\\Binance\\binancematch\\frontend\\src\\containers\\UserOrders.js":"45","E:\\Binance\\binancematch\\frontend\\src\\components\\Toolbar.js":"46","E:\\Binance\\binancematch\\frontend\\src\\components\\Front.js":"47","E:\\Binance\\binancematch\\frontend\\src\\index.js":"48","E:\\Binance\\binancematch\\frontend\\src\\containers\\Tokens.js":"49","E:\\Binance\\binancematch\\frontend\\src\\assets\\Tokens.js":"50","E:\\Binance\\binancematch\\frontend\\src\\components\\BuyOrderBook.js":"51","E:\\Binance\\binancematch\\frontend\\src\\web3\\connectors.js":"52","E:\\Binance\\binancematch\\frontend\\src\\reportWebVitals.js":"53","E:\\Binance\\binancematch\\frontend\\src\\assets\\Exchange.js":"54","E:\\Binance\\binancematch\\frontend\\src\\containers\\Pairs.js":"55"},{"size":5484,"mtime":1607948585217,"results":"56","hashOfConfig":"57"},{"size":542,"mtime":1607901560954,"results":"58","hashOfConfig":"57"},{"size":362,"mtime":1607382662146,"results":"59","hashOfConfig":"57"},{"size":1114,"mtime":1609666586917,"results":"60","hashOfConfig":"61"},{"size":362,"mtime":1607382662146,"results":"62","hashOfConfig":"61"},{"size":542,"mtime":1607901560954,"results":"63","hashOfConfig":"61"},{"size":1279,"mtime":1609667061047,"results":"64","hashOfConfig":"61"},{"size":5000,"mtime":1611743416109,"results":"65","hashOfConfig":"61"},{"size":1157,"mtime":1609891337821,"results":"66","hashOfConfig":"61"},{"size":1320,"mtime":1611055862049,"results":"67","hashOfConfig":"61"},{"size":873,"mtime":1609805244111,"results":"68","hashOfConfig":"61"},{"size":5203,"mtime":1611055607896,"results":"69","hashOfConfig":"61"},{"size":324,"mtime":1609837902408,"results":"70","hashOfConfig":"61"},{"size":92,"mtime":1611747500837,"results":"71","hashOfConfig":"61"},{"size":9095,"mtime":1611706630675,"results":"72","hashOfConfig":"61"},{"size":4229,"mtime":1611708523512,"results":"73","hashOfConfig":"61"},{"size":4227,"mtime":1611708984864,"results":"74","hashOfConfig":"61"},{"size":3741,"mtime":1611190712033,"results":"75","hashOfConfig":"61"},{"size":835,"mtime":1611400239531,"results":"76","hashOfConfig":"61"},{"size":1241,"mtime":1611275390735,"results":"77","hashOfConfig":"61"},{"size":152,"mtime":1611743557520,"results":"78","hashOfConfig":"61"},{"size":542,"mtime":1607901560954,"results":"79","hashOfConfig":"80"},{"size":4543,"mtime":1611965353450,"results":"81","hashOfConfig":"80"},{"size":1279,"mtime":1609667061047,"results":"82","hashOfConfig":"80"},{"size":5203,"mtime":1611055607896,"results":"83","hashOfConfig":"80"},{"size":3741,"mtime":1611190712033,"results":"84","hashOfConfig":"80"},{"size":380,"mtime":1611750521302,"results":"85","hashOfConfig":"80"},{"size":1241,"mtime":1611275390735,"results":"86","hashOfConfig":"80"},{"size":919,"mtime":1611828531799,"results":"87","hashOfConfig":"80"},{"size":324,"mtime":1609837902408,"results":"88","hashOfConfig":"80"},{"size":1114,"mtime":1609666586917,"results":"89","hashOfConfig":"80"},{"size":1320,"mtime":1611055862049,"results":"90","hashOfConfig":"80"},{"size":4313,"mtime":1611983806271,"results":"91","hashOfConfig":"80"},{"size":9101,"mtime":1611969996789,"results":"92","hashOfConfig":"80"},{"size":873,"mtime":1611749779589,"results":"93","hashOfConfig":"80"},{"size":92,"mtime":1611747500837,"results":"94","hashOfConfig":"80"},{"size":4289,"mtime":1611983308105,"results":"95","hashOfConfig":"80"},{"size":1151,"mtime":1612659303502,"results":"96","hashOfConfig":"97"},{"size":1199,"mtime":1613548798619,"results":"98","hashOfConfig":"97"},{"size":3886,"mtime":1613517048860,"results":"99","hashOfConfig":"97"},{"size":919,"mtime":1611828531799,"results":"100","hashOfConfig":"97"},{"size":3775,"mtime":1613347586157,"results":"101","hashOfConfig":"97"},{"size":4585,"mtime":1612659406159,"results":"102","hashOfConfig":"97"},{"size":9101,"mtime":1612570776853,"results":"103","hashOfConfig":"97"},{"size":7070,"mtime":1613643542264,"results":"104","hashOfConfig":"97"},{"size":1450,"mtime":1613552853393,"results":"105","hashOfConfig":"97"},{"size":1299,"mtime":1613602204943,"results":"106","hashOfConfig":"97"},{"size":542,"mtime":1607901560954,"results":"107","hashOfConfig":"97"},{"size":1412,"mtime":1612659645766,"results":"108","hashOfConfig":"97"},{"size":873,"mtime":1611749779589,"results":"109","hashOfConfig":"97"},{"size":3909,"mtime":1613548679203,"results":"110","hashOfConfig":"97"},{"size":324,"mtime":1609837902408,"results":"111","hashOfConfig":"97"},{"size":362,"mtime":1607382662146,"results":"112","hashOfConfig":"97"},{"size":186,"mtime":1613625717336,"results":"113","hashOfConfig":"97"},{"size":5295,"mtime":1612659490999,"results":"114","hashOfConfig":"97"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1a37lq5",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},"70yvj9",{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"133"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"129"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"129"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"140"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lme6c1",{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"178"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},"1llfkak",{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"237"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"208"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"251"},"E:\\Binance\\dexmatch\\frontend\\src\\App.js",["252","253","254"],"E:\\Binance\\dexmatch\\frontend\\src\\index.js",[],"E:\\Binance\\dexmatch\\frontend\\src\\reportWebVitals.js",[],"E:\\Binance\\dexmatch\\dapp\\src\\App.js",[],["255","256"],"E:\\Binance\\dexmatch\\dapp\\src\\reportWebVitals.js",[],["257","258"],"E:\\Binance\\dexmatch\\dapp\\src\\index.js",[],["259","260"],"E:\\Binance\\dexmatch\\dapp\\src\\components\\Toolbar.js",["261"],"import React,{useState} from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport { Menu } from 'semantic-ui-react';\r\n\r\n\r\nconst Toolbar = () => {\r\n    const [activeItem,setActiveItem] = useState('DEX');\r\n\r\n    const menuClick = (e) => {\r\n        //setActiveItem({name});\r\n        //console.log(e);\r\n    }\r\n    return (\r\n        <Menu pointing secondary>\r\n        <Menu.Item as={ Link }\r\n          name='DEX'\r\n          active={activeItem === 'DEX'}\r\n          onClick={menuClick}\r\n          to=\"/\"\r\n        />\r\n        <Menu.Item as={ Link }\r\n          name='Tokens'\r\n          active={activeItem === 'Tokens'}\r\n          onClick={menuClick}\r\n          to=\"/Tokens\"\r\n        />\r\n        <Menu.Item as={ Link }\r\n          name='Pairs'\r\n          active={activeItem === 'Pairs'}\r\n          onClick={menuClick}\r\n          to=\"/Pairs\"\r\n        />\r\n        <Menu.Item as={ Link }\r\n          name='Faucet'\r\n          active={activeItem === 'Faucet'}\r\n          onClick={menuClick}\r\n          to=\"/Faucet\"\r\n        />\r\n        <Menu.Menu position='right'>\r\n          <Menu.Item\r\n            name='DEX TESTBED'\r\n            active={activeItem === 'DEX TESTBED'}\r\n            onClick={menuClick}\r\n          />\r\n        </Menu.Menu>\r\n      </Menu>\r\n    )\r\n}\r\n\r\nexport default Toolbar;",["262","263"],"E:\\Binance\\dexmatch\\dapp\\src\\containers\\Home.js",["264"],"E:\\Binance\\dexmatch\\dapp\\src\\containers\\Faucet.js",[],"E:\\Binance\\dexmatch\\dapp\\src\\containers\\Tokens.js",[],["265","266"],"E:\\Binance\\dexmatch\\dapp\\src\\assets\\Tokens.js",[],["267","268"],"E:\\Binance\\dexmatch\\dapp\\src\\containers\\Pairs.js",["269"],"import React, { useState, useEffect } from 'react';\r\nimport { ethers } from \"ethers\";\r\nimport { Button, Grid, Table, Dropdown } from 'semantic-ui-react';\r\nimport exchange from '../contracts/Dex.json';\r\nimport { EXCHANGEADD } from '../assets/Exchange';\r\nimport {TOKENS} from '../assets/Tokens';\r\n\r\nconst exchangeAddress = EXCHANGEADD.address;\r\n\r\nconst Pairs = () => {\r\n    const [tokenPairs,setTokenPairs] = useState([]);\r\n    const [numPairs,setNumPairs] = useState(0);\r\n    const [options,setOptions] = useState([]);\r\n    const [firstToken,setFirstToken] = useState('');\r\n    const [secondToken,setSecondToken] = useState('');\r\n\r\n    console.log(options);\r\n    console.log(tokenPairs);\r\n\r\n    useEffect( () => {\r\n        const tokensDropdown = () => {\r\n            console.log(TOKENS.length);\r\n            setOptions([]);\r\n            TOKENS.map(token => setOptions(options => [...options,{\r\n                text: token.symbol,\r\n                id : token.address,\r\n                value : token.address,\r\n            }]));\r\n        }\r\n        tokensDropdown();\r\n    },[]);\r\n\r\n    useEffect( () => {\r\n        const getList = async () => {\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            //const signer = provider.getSigner();\r\n            const contract = new ethers.Contract(exchangeAddress, exchange.abi, provider);\r\n            let id = (await contract.getTotalPairs()).toNumber();\r\n            setNumPairs(id);\r\n            setTokenPairs([]);\r\n            for(let i = 1; i <= id; ++i) {\r\n                let pairInfo = await contract.getPairInfo(i);\r\n                //console.log(pairInfo);\r\n                setTokenPairs(tokenPairs => [...tokenPairs,{\r\n                    id: i,\r\n                    tokenAddress1: pairInfo[0].toString(),\r\n                    tokenSymbol1: pairInfo[1].toString(),\r\n                    tokenAddress2: pairInfo[2].toString(),\r\n                    tokenSymbol2: pairInfo[3].toString(),\r\n                }]);\r\n            }\r\n        }\r\n        getList();\r\n    },[])\r\n\r\n    const firstDropdown = (e,d) => {\r\n        e.preventDefault();\r\n        setFirstToken(d.value);\r\n    }\r\n\r\n    const secondDropdown = (e,d) => {\r\n        e.preventDefault();\r\n        setSecondToken(d.value);\r\n    }\r\n\r\n    const createPair = async () => {\r\n        if (firstToken === '' || secondToken === '') {\r\n            alert(\"Please Select Both Tokens\");\r\n            return;\r\n        }\r\n\r\n        if (firstToken === secondToken) {\r\n            alert(\"Please Select Two Different Tokens\");\r\n            return;\r\n        }\r\n\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = provider.getSigner();\r\n        const contract = new ethers.Contract(exchangeAddress, exchange.abi, provider);\r\n        const connectedContract = contract.connect(signer);\r\n        connectedContract.createTokenPair(firstToken,secondToken);\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Row centered>\r\n                <h2>Available Token Pairs</h2>\r\n            </Grid.Row>\r\n            <Grid.Row centered>\r\n                <Table celled padded>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell textAlign='center'>Pair ID</Table.HeaderCell>\r\n                            <Table.HeaderCell textAlign='center'>Token 1</Table.HeaderCell>\r\n                            <Table.HeaderCell textAlign='center'>Token 2</Table.HeaderCell>\r\n                        </Table.Row>                \r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {tokenPairs.map(tokenPair => {\r\n                            return (\r\n                                <Table.Row key={tokenPair.id}>\r\n                                    <Table.Cell textAlign='center'>{tokenPair.id}</Table.Cell>\r\n                                    <Table.Cell textAlign='center'>{tokenPair.tokenSymbol1}</Table.Cell>\r\n                                    <Table.Cell textAlign='center'>{tokenPair.tokenSymbol2}</Table.Cell>\r\n                                </Table.Row>\r\n                            )\r\n                        })}\r\n                    </Table.Body>\r\n                </Table>\r\n            </Grid.Row>\r\n            <Grid.Row centered>\r\n                <h2>Create Additional Pairs</h2>\r\n            </Grid.Row>\r\n            <Grid.Row centered columns={3}>\r\n                <Grid.Column textAlign='center'>\r\n                    <Dropdown placeholder='Token 1' options={options} onChange={firstDropdown} search selection/>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row centered columns={3}>\r\n                <Grid.Column textAlign='center'>\r\n                    <Dropdown placeholder='Token 2' options={options} onChange={secondDropdown} search selection/>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row centered columns={3}>\r\n                <Grid.Column textAlign='center'>\r\n                    <Button primary onClick={createPair}>Create Pair</Button>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Pairs;","E:\\Binance\\dexmatch\\dapp\\src\\web3\\connectors.js",[],"E:\\Binance\\dexmatch\\dapp\\src\\assets\\Exchange.js",[],"E:\\Binance\\dexmatch\\dapp\\src\\components\\BuySell.js",[],"E:\\Binance\\dexmatch\\dapp\\src\\components\\BuyOrderBook.js",["270"],"import React, { useState, useEffect } from 'react';\r\nimport { ethers } from \"ethers\";\r\nimport exchange from '../contracts/Dex.json';\r\nimport { EXCHANGEADD } from '../assets/Exchange';\r\nimport { Table } from 'semantic-ui-react';\r\nimport BigNumber from 'bignumber.js';\r\n\r\nconst UNIT = 1000000000000000000;\r\nconst exchangeAddress = EXCHANGEADD.address;\r\n\r\nconst BuyOrderBook = ({firstToken,firstAddress,secondToken,secondAddress}) => {\r\n    const [orderSize,setOrderSize] = useState(0);\r\n    const [orders,setOrders] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getOrderList = async () => {\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const contract = new ethers.Contract(exchangeAddress, exchange.abi, provider);\r\n            console.log(firstToken,firstAddress,secondToken,secondAddress);\r\n\r\n            if (firstAddress && secondAddress) {\r\n                let offerSize = await contract.getOfferSize(secondAddress,firstAddress);\r\n                setOrderSize(offerSize.toNumber());\r\n            }\r\n        } \r\n\r\n        getOrderList();\r\n    },[firstToken,firstAddress,secondToken,secondAddress]);\r\n\r\n    useEffect(() => {\r\n        const getOrders = async () => {\r\n            if (orderSize > 0) {\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                const contract = new ethers.Contract(exchangeAddress, exchange.abi, provider);\r\n                console.log(orderSize);\r\n\r\n                setOrders([]);\r\n    \r\n                let offerId = (await contract.getBestOffer(secondAddress,firstAddress)).toNumber();\r\n                let offers = await contract.getOfferPerId(offerId);\r\n\r\n                let sell = new BigNumber(offers[1].toString());\r\n                let buy = new BigNumber(offers[3].toString());\r\n\r\n                let price = buy.dividedBy(sell).toNumber();\r\n                let amount = sell.dividedBy(UNIT).toNumber();\r\n                let total = buy.dividedBy(UNIT).toNumber();\r\n\r\n                console.log(price,amount,total);\r\n\r\n                setOrders(orders => [...orders, {\r\n                    id: offerId,\r\n                    price: price,\r\n                    amount: amount,\r\n                    total: total,\r\n                }]);\r\n\r\n                for (let i = 1; i < orderSize; ++i) {\r\n                    offerId = (await contract.getPrevOffer(offerId)).toNumber();\r\n                    offers = await contract.getOfferPerId(offerId);\r\n\r\n                    sell = new BigNumber(offers[1].toString());\r\n                    buy = new BigNumber(offers[3].toString());\r\n                    price = buy.dividedBy(sell).toNumber();\r\n                    amount = sell.dividedBy(UNIT).toNumber();\r\n                    total = buy.dividedBy(UNIT).toNumber();\r\n\r\n                    setOrders(orders => [...orders, {\r\n                        id: offerId,\r\n                        price: price,\r\n                        amount: amount,\r\n                        total: total,\r\n                    }]);\r\n                }\r\n            } else {\r\n                setOrders([]);\r\n            }\r\n        }\r\n\r\n        getOrders();\r\n    },[orderSize,firstAddress,secondAddress]);\r\n\r\n    \r\n\r\n    return (\r\n        <Table celled padded>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell textAlign='center'>Price</Table.HeaderCell>\r\n                    <Table.HeaderCell textAlign='center'>Amount</Table.HeaderCell>\r\n                    <Table.HeaderCell textAlign='center'>Total</Table.HeaderCell>\r\n                </Table.Row>                \r\n            </Table.Header>\r\n            <Table.Body>\r\n                {orders.map(order => {\r\n                    return (\r\n                        <Table.Row key={order.id}>\r\n                            <Table.Cell textAlign='center'>{order.price}</Table.Cell>\r\n                            <Table.Cell textAlign='center'>{order.amount}</Table.Cell>\r\n                            <Table.Cell textAlign='center'>{order.total}</Table.Cell>\r\n                        </Table.Row>\r\n                    )\r\n                })}\r\n            </Table.Body>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default BuyOrderBook;","E:\\Binance\\dexmatch\\dapp\\src\\components\\SellOrderBook.js",["271"],"import React, { useState, useEffect } from 'react';\r\nimport { ethers } from \"ethers\";\r\nimport exchange from '../contracts/Dex.json';\r\nimport { EXCHANGEADD } from '../assets/Exchange';\r\nimport { Table } from 'semantic-ui-react';\r\nimport BigNumber from 'bignumber.js';\r\n\r\nconst UNIT = 1000000000000000000;\r\nconst exchangeAddress = EXCHANGEADD.address;\r\n\r\n\r\nconst SellOrderBook = ({firstToken,firstAddress,secondToken,secondAddress}) => {\r\n    const [orderSize,setOrderSize] = useState(0);\r\n    const [orders,setOrders] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getOrderList = async () => {\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const contract = new ethers.Contract(exchangeAddress, exchange.abi, provider);\r\n            console.log(firstToken,firstAddress,secondToken,secondAddress);\r\n\r\n            if (firstAddress && secondAddress) {\r\n                let offerSize = await contract.getOfferSize(firstAddress,secondAddress);\r\n                setOrderSize(offerSize.toNumber());\r\n            }\r\n        } \r\n\r\n        getOrderList();\r\n    },[firstToken,firstAddress,secondToken,secondAddress]);\r\n\r\n    useEffect(() => {\r\n        const getOrders = async () => {\r\n            if (orderSize > 0) {\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                const contract = new ethers.Contract(exchangeAddress, exchange.abi, provider);\r\n                console.log(orderSize);\r\n\r\n                setOrders([]);\r\n    \r\n                let offerId = (await contract.getBestOffer(firstAddress,secondAddress)).toNumber();\r\n                let offers = await contract.getOfferPerId(offerId);\r\n\r\n                let sell = new BigNumber(offers[1].toString());\r\n                let buy = new BigNumber(offers[3].toString());\r\n\r\n                let price = sell.dividedBy(buy).toNumber();\r\n                let amount = buy.dividedBy(UNIT).toNumber();\r\n                let total = sell.dividedBy(UNIT).toNumber();\r\n\r\n                console.log(price,amount,total);\r\n\r\n                setOrders(orders => [...orders, {\r\n                    id: offerId,\r\n                    price: price,\r\n                    amount: amount,\r\n                    total: total,\r\n                }]);\r\n\r\n                for (let i = 1; i < orderSize; ++i) {\r\n                    offerId = (await contract.getPrevOffer(offerId)).toNumber();\r\n                    offers = await contract.getOfferPerId(offerId);\r\n\r\n                    sell = new BigNumber(offers[1].toString());\r\n                    buy = new BigNumber(offers[3].toString());\r\n\r\n                    price = sell.dividedBy(buy).toNumber();\r\n                    amount = buy.dividedBy(UNIT).toNumber();\r\n                    total = sell.dividedBy(UNIT).toNumber();\r\n\r\n                    setOrders(orders => [...orders, {\r\n                        id: offerId,\r\n                        price: price,\r\n                        amount: amount,\r\n                        total: total,\r\n                    }]);\r\n                }\r\n            } else {\r\n                setOrders([]);\r\n            }\r\n        }\r\n\r\n        getOrders();\r\n    },[orderSize,firstAddress,secondAddress]);\r\n\r\n    return (\r\n        <Table celled padded>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell textAlign='center'>Price</Table.HeaderCell>\r\n                    <Table.HeaderCell textAlign='center'>Amount</Table.HeaderCell>\r\n                    <Table.HeaderCell textAlign='center'>Total</Table.HeaderCell>\r\n                </Table.Row>                \r\n            </Table.Header>\r\n            <Table.Body>\r\n                {orders.map(order => {\r\n                    return (\r\n                        <Table.Row key={order.id}>\r\n                            <Table.Cell textAlign='center'>{order.price}</Table.Cell>\r\n                            <Table.Cell textAlign='center'>{order.amount}</Table.Cell>\r\n                            <Table.Cell textAlign='center'>{order.total}</Table.Cell>\r\n                        </Table.Row>\r\n                    )\r\n                })}\r\n            </Table.Body>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default SellOrderBook;","E:\\Binance\\dexmatch\\dapp\\src\\components\\WalletConnector.js",["272","273","274"],"import React, { useState, useEffect } from 'react'; \r\nimport { useWeb3React } from '@web3-react/core';\r\nimport useSWR from 'swr';\r\nimport { formatEther, formatUnits } from \"@ethersproject/units\";\r\nimport { Contract } from '@ethersproject/contracts';\r\nimport { isAddress } from '@ethersproject/address';\r\nimport ERC20 from '../contracts/erc20.json';\r\nimport { Table } from 'semantic-ui-react';\r\nimport {TOKENS} from '../assets/Tokens';\r\n\r\n\r\nconst fetcher = (library,abi) => (...args) => {\r\n  const [arg1, arg2, ...params] = args;\r\n\r\n  if (isAddress(arg1)) {\r\n    const address = arg1;\r\n    const method = arg2;\r\n    const contract = new Contract(address, abi, library.getSigner());\r\n    return contract[method](...params);\r\n  }\r\n  \r\n  const method = arg1;\r\n  return library[method](arg2, ...params);\r\n}\r\n\r\nexport const Balance = () => {\r\n  const { account, library } = useWeb3React();\r\n  const { data: balance, mutate } = useSWR(['getBalance', account, 'latest'], {\r\n    fetcher: fetcher(library,ERC20),\r\n  });\r\n\r\n  useEffect(() => {\r\n    library.on('block',() => {\r\n      mutate(undefined, true);\r\n    });\r\n\r\n    return () => {\r\n      library.removeAllListeners('block');\r\n    };\r\n  },[]);\r\n\r\n  if(!balance) {\r\n    return <div>...</div>\r\n  }\r\n  return <div>BNB : {parseFloat(formatEther(balance)).toPrecision(4)}</div>;\r\n}\r\n  \r\nexport const TokenBalance = ({ symbol, address, decimals }) => {\r\n  const { account, library } = useWeb3React();\r\n  const { data: balance, mutate } = useSWR([address, 'balanceOf', account], {\r\n    fetcher: fetcher(library, ERC20),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const contract = new Contract(address, ERC20, library.getSigner());\r\n    const fromAcc = contract.filters.Transfer(account, null);\r\n    library.on(fromAcc, (from, to, amount, event) => {\r\n      console.log('Transfer|sent', { from, to, amount, event });\r\n      mutate(undefined, true);\r\n    });\r\n    const toAcc = contract.filters.Transfer(null, account);\r\n    library.on(toAcc, (from, to, amount, event) => {\r\n      console.log('Transfer|received', { from, to, amount, event });\r\n      mutate(undefined, true);\r\n    });\r\n\r\n    return () => {\r\n      library.removeAllListeners(fromAcc);\r\n      library.removeAllListeners(toAcc);\r\n    };\r\n  },[]);\r\n\r\n  if(!balance) {\r\n    return <Table.Body>...</Table.Body>\r\n  }\r\n  return (\r\n  <Table.Body>\r\n    <Table.Cell textAlign='center'>{symbol}</Table.Cell>\r\n    <Table.Cell textAlign='center'>{parseFloat(formatUnits(balance, decimals)).toPrecision(4)}</Table.Cell>\r\n  </Table.Body>);\r\n}\r\n  \r\nexport const TokenList = ({chainId}) => {\r\n  if (chainId === 97) {\r\n    return (\r\n      <>\r\n        <Table basic celled collapsing>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell textAlign='center'>Symbol</Table.HeaderCell>\r\n              <Table.HeaderCell textAlign='center'>Amount</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header> \r\n          {TOKENS.map((token) => (\r\n            <TokenBalance key={token.address} {...token} />\r\n          ))}\r\n        </Table>\r\n      </>\r\n    )\r\n  } else {\r\n    return (\r\n      <div></div>\r\n    )\r\n  }\r\n};\r\n\r\n/*\r\nexport const Wallet = () => {\r\n  const { chainId, account, activate, active } = useWeb3React();\r\n\r\n  const onClick = () => {\r\n    activate(injectedConnector);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>USER ACCOUNT</h4>\r\n      {active ? (\r\n        <div>\r\n          <div>ChainId: {chainId}</div>\r\n          <div>Account: {account}</div>   \r\n        </div>\r\n      ) : (\r\n        <Button primary onClick={onClick}>\r\n          Connect To MetaMask\r\n        </Button>\r\n      )}\r\n      {active && \r\n      <>\r\n        <Balance />\r\n        <TokenList chainId={chainId} />\r\n      </>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n*/","E:\\Binance\\dexmatch\\dapp\\src\\components\\PairSelect.js",[],"E:\\Binance\\dexmatch\\dapp\\src\\components\\Front.js",[],["275","276"],"E:\\Binance\\dexmatch\\dapp\\src\\components\\UserOrders.js",[],"E:\\Binance\\binancedex\\frontend\\src\\index.js",[],"E:\\Binance\\binancedex\\frontend\\src\\containers\\Home.js",["277","278"],"E:\\Binance\\binancedex\\frontend\\src\\components\\Toolbar.js",["279"],["280","281"],"E:\\Binance\\binancedex\\frontend\\src\\containers\\Pairs.js",["282"],["283","284"],"E:\\Binance\\binancedex\\frontend\\src\\components\\WalletConnector.js",["285","286","287"],"E:\\Binance\\binancedex\\frontend\\src\\components\\UserOrders.js",["288","289","290","291"],"import React from 'react';\r\nimport { ethers } from \"ethers\";\r\nimport exchange from '../contracts/Dex.json';\r\nimport { EXCHANGEADD } from '../assets/Exchange';\r\n\r\nimport { Table } from 'semantic-ui-react';\r\n\r\n\r\nconst exchangeAddress = EXCHANGEADD.address;\r\n\r\nconst UserOrders = ({account}) => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserOrders;",["292","293"],"E:\\Binance\\binancedex\\frontend\\src\\components\\Front.js",[],"E:\\Binance\\binancedex\\frontend\\src\\components\\PairSelect.js",[],"E:\\Binance\\binancedex\\frontend\\src\\web3\\connectors.js",[],["294","295"],"E:\\Binance\\binancedex\\frontend\\src\\App.js",[],"E:\\Binance\\binancedex\\frontend\\src\\containers\\Tokens.js",[],"E:\\Binance\\binancedex\\frontend\\src\\components\\BuyOrderBook.js",["296"],"E:\\Binance\\binancedex\\frontend\\src\\components\\BuySell.js",[],"E:\\Binance\\binancedex\\frontend\\src\\assets\\Tokens.js",[],"E:\\Binance\\binancedex\\frontend\\src\\assets\\Exchange.js",[],"E:\\Binance\\binancedex\\frontend\\src\\components\\SellOrderBook.js",["297"],"E:\\Binance\\binancematch\\frontend\\src\\App.js",[],["298","299"],"E:\\Binance\\binancematch\\frontend\\src\\containers\\Faucet.js",[],"E:\\Binance\\binancematch\\frontend\\src\\components\\SellOrderBook.js",["300"],"E:\\Binance\\binancematch\\frontend\\src\\components\\PairSelect.js",[],"E:\\Binance\\binancematch\\frontend\\src\\components\\WalletConnector.js",[],["301","302"],"E:\\Binance\\binancematch\\frontend\\src\\containers\\Home.js",["303"],"E:\\Binance\\binancematch\\frontend\\src\\components\\BuySell.js",[],["304","305"],"E:\\Binance\\binancematch\\frontend\\src\\containers\\UserOrders.js",["306","307","308","309"],"E:\\Binance\\binancematch\\frontend\\src\\components\\Toolbar.js",[],"E:\\Binance\\binancematch\\frontend\\src\\components\\Front.js",[],"E:\\Binance\\binancematch\\frontend\\src\\index.js",[],["310","311"],"E:\\Binance\\binancematch\\frontend\\src\\containers\\Tokens.js",[],["312","313"],"E:\\Binance\\binancematch\\frontend\\src\\assets\\Tokens.js",[],["314","315"],"E:\\Binance\\binancematch\\frontend\\src\\components\\BuyOrderBook.js",["316"],"import React, { useState, useEffect } from 'react';\r\nimport { ethers } from \"ethers\";\r\nimport exchange from '../contracts/Dex.json';\r\nimport { EXCHANGEADD } from '../assets/Exchange';\r\nimport { Table } from 'semantic-ui-react';\r\nimport BigNumber from 'bignumber.js';\r\n\r\nconst UNIT = 1000000000000000000;\r\nconst exchangeAddress = EXCHANGEADD.address;\r\n\r\nconst BuyOrderBook = ({firstToken,firstAddress,secondToken,secondAddress}) => {\r\n    const [orderSize,setOrderSize] = useState(0);\r\n    const [orders,setOrders] = useState([]);\r\n\r\n    const orderState = (offerId,sell,buy) => {\r\n        let price = sell.dividedBy(buy).toNumber();\r\n        let amount = buy.dividedBy(UNIT).toNumber();\r\n        let total = sell.dividedBy(UNIT).toNumber();\r\n\r\n        setOrders(orders => [...orders, {\r\n            id: offerId,\r\n            price: price,\r\n            amount: amount,\r\n            total: total,\r\n        }]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getOrderList = async () => {\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const contract = new ethers.Contract(exchangeAddress, exchange.abi, provider);\r\n\r\n            if (firstAddress && secondAddress) {\r\n                let offerSize = await contract.getOfferSize(secondAddress,firstAddress);\r\n                setOrderSize(offerSize.toNumber());\r\n            }\r\n        } \r\n\r\n        getOrderList();\r\n    },[firstToken,firstAddress,secondToken,secondAddress]);\r\n\r\n    useEffect(() => {\r\n        const getOrders = async () => {\r\n            if (orderSize > 0) {\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                const contract = new ethers.Contract(exchangeAddress, exchange.abi, provider);\r\n\r\n                setOrders([]);\r\n    \r\n                let offerId = (await contract.getBestOffer(secondAddress,firstAddress)).toNumber();\r\n                let offers = await contract.getOfferPerId(offerId);\r\n\r\n                let sell = new BigNumber(offers[1].toString());\r\n                let buy = new BigNumber(offers[3].toString());\r\n\r\n                orderState(offerId,sell,buy);\r\n\r\n\r\n                for (let i = 1; i < orderSize; ++i) {\r\n                    let offId1;\r\n\r\n                    if (i === 1) {\r\n                        offId1 = offerId;\r\n                    }\r\n                    offId1 = (await contract.getPrevOffer(offId1)).toNumber();\r\n                    offers = await contract.getOfferPerId(offId1);\r\n\r\n                    sell = new BigNumber(offers[1].toString());\r\n                    buy = new BigNumber(offers[3].toString());\r\n                    \r\n                    orderState(offId1,sell,buy);\r\n                }\r\n            } else {\r\n                setOrders([]);\r\n            }\r\n        }\r\n\r\n        getOrders();\r\n    },[orderSize]);\r\n\r\n    \r\n\r\n    return (\r\n        <Table celled padded>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell textAlign='center'>{`Price (${secondToken})`}</Table.HeaderCell>\r\n                    <Table.HeaderCell textAlign='center'>{`Amount (${firstToken})`}</Table.HeaderCell>\r\n                    <Table.HeaderCell textAlign='center'>{`Total (${secondToken})`}</Table.HeaderCell>\r\n                </Table.Row>                \r\n            </Table.Header>\r\n            <Table.Body>\r\n                {orders.map(order => {\r\n                    return (\r\n                        <Table.Row key={order.id}>\r\n                            <Table.Cell textAlign='center'>{order.price}</Table.Cell>\r\n                            <Table.Cell textAlign='center'>{order.amount}</Table.Cell>\r\n                            <Table.Cell textAlign='center'>{order.total}</Table.Cell>\r\n                        </Table.Row>\r\n                    )\r\n                })}\r\n            </Table.Body>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default BuyOrderBook;","E:\\Binance\\binancematch\\frontend\\src\\web3\\connectors.js",[],["317","318"],"E:\\Binance\\binancematch\\frontend\\src\\reportWebVitals.js",[],"E:\\Binance\\binancematch\\frontend\\src\\assets\\Exchange.js",[],"E:\\Binance\\binancematch\\frontend\\src\\containers\\Pairs.js",["319"],"import React, { useState, useEffect } from 'react';\r\nimport { ethers } from \"ethers\";\r\nimport { Button, Grid, Table, Dropdown } from 'semantic-ui-react';\r\nimport exchange from '../contracts/Dex.json';\r\nimport { EXCHANGEADD } from '../assets/Exchange';\r\nimport {TOKENS} from '../assets/Tokens';\r\nimport Toolbar from '../components/Toolbar';\r\n\r\nconst exchangeAddress = EXCHANGEADD.address;\r\n\r\nconst Pairs = () => {\r\n    const [tokenPairs,setTokenPairs] = useState([]);\r\n    const [numPairs,setNumPairs] = useState(0);\r\n    const [options,setOptions] = useState([]);\r\n    const [firstToken,setFirstToken] = useState('');\r\n    const [secondToken,setSecondToken] = useState('');\r\n\r\n    console.log(options);\r\n    console.log(tokenPairs);\r\n\r\n    useEffect( () => {\r\n        const tokensDropdown = () => {\r\n            console.log(TOKENS.length);\r\n            setOptions([]);\r\n            TOKENS.map(token => setOptions(options => [...options,{\r\n                text: token.symbol,\r\n                id : token.address,\r\n                value : token.address,\r\n            }]));\r\n        }\r\n        tokensDropdown();\r\n    },[]);\r\n\r\n    useEffect( () => {\r\n        const getList = async () => {\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            //const signer = provider.getSigner();\r\n            const contract = new ethers.Contract(exchangeAddress, exchange.abi, provider);\r\n            let id = (await contract.getTotalPairs()).toNumber();\r\n            setNumPairs(id);\r\n            setTokenPairs([]);\r\n            for(let i = 1; i <= id; ++i) {\r\n                let pairInfo = await contract.getPairInfo(i);\r\n                //console.log(pairInfo);\r\n                setTokenPairs(tokenPairs => [...tokenPairs,{\r\n                    id: i,\r\n                    tokenAddress1: pairInfo[0].toString(),\r\n                    tokenSymbol1: pairInfo[1].toString(),\r\n                    tokenAddress2: pairInfo[2].toString(),\r\n                    tokenSymbol2: pairInfo[3].toString(),\r\n                }]);\r\n            }\r\n        }\r\n        getList();\r\n    },[])\r\n\r\n    const firstDropdown = (e,d) => {\r\n        e.preventDefault();\r\n        setFirstToken(d.value);\r\n    }\r\n\r\n    const secondDropdown = (e,d) => {\r\n        e.preventDefault();\r\n        setSecondToken(d.value);\r\n    }\r\n\r\n    const createPair = async () => {\r\n        if (firstToken === '' || secondToken === '') {\r\n            alert(\"Please Select Both Tokens\");\r\n            return;\r\n        }\r\n\r\n        if (firstToken === secondToken) {\r\n            alert(\"Please Select Two Different Tokens\");\r\n            return;\r\n        }\r\n\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = provider.getSigner();\r\n        const contract = new ethers.Contract(exchangeAddress, exchange.abi, provider);\r\n        const connectedContract = contract.connect(signer);\r\n        connectedContract.createTokenPair(firstToken,secondToken);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Toolbar />\r\n        <Grid>\r\n            <Grid.Row centered>\r\n                <h2>Available Token Pairs</h2>\r\n            </Grid.Row>\r\n            <Grid.Row centered>\r\n                <Table celled padded>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell textAlign='center'>Pair ID</Table.HeaderCell>\r\n                            <Table.HeaderCell textAlign='center'>Token 1</Table.HeaderCell>\r\n                            <Table.HeaderCell textAlign='center'>Token 2</Table.HeaderCell>\r\n                        </Table.Row>                \r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {tokenPairs.map(tokenPair => {\r\n                            return (\r\n                                <Table.Row key={tokenPair.id}>\r\n                                    <Table.Cell textAlign='center'>{tokenPair.id}</Table.Cell>\r\n                                    <Table.Cell textAlign='center'>{tokenPair.tokenSymbol1}</Table.Cell>\r\n                                    <Table.Cell textAlign='center'>{tokenPair.tokenSymbol2}</Table.Cell>\r\n                                </Table.Row>\r\n                            )\r\n                        })}\r\n                    </Table.Body>\r\n                </Table>\r\n            </Grid.Row>\r\n            <Grid.Row centered>\r\n                <h2>Create Additional Pairs</h2>\r\n            </Grid.Row>\r\n            <Grid.Row centered columns={3}>\r\n                <Grid.Column textAlign='center'>\r\n                    <Dropdown placeholder='Token 1' options={options} onChange={firstDropdown} search selection/>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row centered columns={3}>\r\n                <Grid.Column textAlign='center'>\r\n                    <Dropdown placeholder='Token 2' options={options} onChange={secondDropdown} search selection/>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row centered columns={3}>\r\n                <Grid.Column textAlign='center'>\r\n                    <Button primary onClick={createPair}>Create Pair</Button>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pairs;",["320","321"],{"ruleId":"322","severity":1,"message":"323","line":78,"column":5,"nodeType":"324","endLine":78,"endColumn":7,"suggestions":"325"},{"ruleId":"322","severity":1,"message":"326","line":109,"column":5,"nodeType":"324","endLine":109,"endColumn":7,"suggestions":"327"},{"ruleId":"328","severity":1,"message":"329","line":166,"column":21,"nodeType":"330","messageId":"331","endLine":166,"endColumn":34},{"ruleId":"332","replacedBy":"333"},{"ruleId":"334","replacedBy":"335"},{"ruleId":"332","replacedBy":"336"},{"ruleId":"334","replacedBy":"337"},{"ruleId":"332","replacedBy":"338"},{"ruleId":"334","replacedBy":"339"},{"ruleId":"328","severity":1,"message":"329","line":7,"column":23,"nodeType":"330","messageId":"331","endLine":7,"endColumn":36},{"ruleId":"332","replacedBy":"340"},{"ruleId":"334","replacedBy":"341"},{"ruleId":"328","severity":1,"message":"342","line":20,"column":10,"nodeType":"330","messageId":"331","endLine":20,"endColumn":18},{"ruleId":"332","replacedBy":"343"},{"ruleId":"334","replacedBy":"344"},{"ruleId":"332","replacedBy":"345"},{"ruleId":"334","replacedBy":"346"},{"ruleId":"328","severity":1,"message":"342","line":12,"column":12,"nodeType":"330","messageId":"331","endLine":12,"endColumn":20},{"ruleId":"347","severity":1,"message":"348","line":68,"column":31,"nodeType":"349","messageId":"350","endLine":73,"endColumn":23},{"ruleId":"347","severity":1,"message":"348","line":70,"column":31,"nodeType":"349","messageId":"350","endLine":75,"endColumn":23},{"ruleId":"328","severity":1,"message":"351","line":1,"column":17,"nodeType":"330","messageId":"331","endLine":1,"endColumn":25},{"ruleId":"322","severity":1,"message":"323","line":40,"column":5,"nodeType":"324","endLine":40,"endColumn":7,"suggestions":"352"},{"ruleId":"322","severity":1,"message":"326","line":71,"column":5,"nodeType":"324","endLine":71,"endColumn":7,"suggestions":"353"},{"ruleId":"332","replacedBy":"354"},{"ruleId":"334","replacedBy":"355"},{"ruleId":"328","severity":1,"message":"356","line":13,"column":8,"nodeType":"330","messageId":"331","endLine":13,"endColumn":18},{"ruleId":"328","severity":1,"message":"342","line":20,"column":10,"nodeType":"330","messageId":"331","endLine":20,"endColumn":18},{"ruleId":"328","severity":1,"message":"329","line":7,"column":23,"nodeType":"330","messageId":"331","endLine":7,"endColumn":36},{"ruleId":"332","replacedBy":"357"},{"ruleId":"334","replacedBy":"358"},{"ruleId":"328","severity":1,"message":"342","line":12,"column":12,"nodeType":"330","messageId":"331","endLine":12,"endColumn":20},{"ruleId":"332","replacedBy":"359"},{"ruleId":"334","replacedBy":"360"},{"ruleId":"328","severity":1,"message":"351","line":1,"column":17,"nodeType":"330","messageId":"331","endLine":1,"endColumn":25},{"ruleId":"322","severity":1,"message":"323","line":40,"column":5,"nodeType":"324","endLine":40,"endColumn":7,"suggestions":"361"},{"ruleId":"322","severity":1,"message":"326","line":71,"column":5,"nodeType":"324","endLine":71,"endColumn":7,"suggestions":"362"},{"ruleId":"328","severity":1,"message":"363","line":2,"column":10,"nodeType":"330","messageId":"331","endLine":2,"endColumn":16},{"ruleId":"328","severity":1,"message":"364","line":3,"column":8,"nodeType":"330","messageId":"331","endLine":3,"endColumn":16},{"ruleId":"328","severity":1,"message":"365","line":6,"column":10,"nodeType":"330","messageId":"331","endLine":6,"endColumn":15},{"ruleId":"328","severity":1,"message":"366","line":9,"column":7,"nodeType":"330","messageId":"331","endLine":9,"endColumn":22},{"ruleId":"332","replacedBy":"367"},{"ruleId":"334","replacedBy":"368"},{"ruleId":"332","replacedBy":"369"},{"ruleId":"334","replacedBy":"370"},{"ruleId":"347","severity":1,"message":"348","line":69,"column":31,"nodeType":"349","messageId":"350","endLine":74,"endColumn":23},{"ruleId":"347","severity":1,"message":"348","line":70,"column":31,"nodeType":"349","messageId":"350","endLine":75,"endColumn":23},{"ruleId":"332","replacedBy":"371"},{"ruleId":"334","replacedBy":"372"},{"ruleId":"322","severity":1,"message":"373","line":80,"column":7,"nodeType":"324","endLine":80,"endColumn":18,"suggestions":"374"},{"ruleId":"332","replacedBy":"375"},{"ruleId":"334","replacedBy":"376"},{"ruleId":"328","severity":1,"message":"342","line":20,"column":10,"nodeType":"330","messageId":"331","endLine":20,"endColumn":18},{"ruleId":"332","replacedBy":"377"},{"ruleId":"334","replacedBy":"378"},{"ruleId":"328","severity":1,"message":"379","line":18,"column":13,"nodeType":"330","messageId":"331","endLine":18,"endColumn":20},{"ruleId":"328","severity":1,"message":"380","line":18,"column":31,"nodeType":"330","messageId":"331","endLine":18,"endColumn":39},{"ruleId":"328","severity":1,"message":"381","line":18,"column":41,"nodeType":"330","messageId":"331","endLine":18,"endColumn":47},{"ruleId":"328","severity":1,"message":"382","line":33,"column":13,"nodeType":"330","messageId":"331","endLine":33,"endColumn":20},{"ruleId":"332","replacedBy":"383"},{"ruleId":"334","replacedBy":"384"},{"ruleId":"332","replacedBy":"385"},{"ruleId":"334","replacedBy":"386"},{"ruleId":"332","replacedBy":"387"},{"ruleId":"334","replacedBy":"388"},{"ruleId":"322","severity":1,"message":"373","line":79,"column":7,"nodeType":"324","endLine":79,"endColumn":18,"suggestions":"389"},{"ruleId":"332","replacedBy":"390"},{"ruleId":"334","replacedBy":"391"},{"ruleId":"328","severity":1,"message":"342","line":13,"column":12,"nodeType":"330","messageId":"331","endLine":13,"endColumn":20},{"ruleId":"332","replacedBy":"392"},{"ruleId":"334","replacedBy":"393"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'library' and 'mutate'. Either include them or remove the dependency array.","ArrayExpression",["394"],"React Hook useEffect has missing dependencies: 'account', 'address', 'library', and 'mutate'. Either include them or remove the dependency array.",["395"],"no-unused-vars","'setActiveItem' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["396"],"no-negated-in-lhs",["397"],["396"],["397"],["396"],["397"],["396"],["397"],"'numPairs' is assigned a value but never used.",["396"],["397"],["396"],["397"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'offerId', 'price', 'amount', 'total'.","ArrowFunctionExpression","unsafeRefs","'useState' is defined but never used.",["398"],["399"],["396"],["397"],"'UserOrders' is defined but never used.",["396"],["397"],["396"],["397"],["400"],["401"],"'ethers' is defined but never used.","'exchange' is defined but never used.","'Table' is defined but never used.","'exchangeAddress' is assigned a value but never used.",["396"],["397"],["396"],["397"],["396"],["397"],"React Hook useEffect has missing dependencies: 'firstAddress' and 'secondAddress'. Either include them or remove the dependency array.",["402"],["396"],["397"],["396"],["397"],"'chainId' is assigned a value but never used.","'activate' is assigned a value but never used.","'active' is assigned a value but never used.","'success' is assigned a value but never used.",["396"],["397"],["396"],["397"],["396"],["397"],["403"],["396"],["397"],["396"],["397"],{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},"no-global-assign","no-unsafe-negation",{"desc":"404","fix":"408"},{"desc":"406","fix":"409"},{"desc":"404","fix":"410"},{"desc":"406","fix":"411"},{"desc":"412","fix":"413"},{"desc":"412","fix":"414"},"Update the dependencies array to be: [library, mutate]",{"range":"415","text":"416"},"Update the dependencies array to be: [account, address, library, mutate]",{"range":"417","text":"418"},{"range":"419","text":"416"},{"range":"420","text":"418"},{"range":"421","text":"416"},{"range":"422","text":"418"},"Update the dependencies array to be: [firstAddress, orderSize, secondAddress]",{"range":"423","text":"424"},{"range":"425","text":"424"},[2075,2077],"[library, mutate]",[3092,3094],"[account, address, library, mutate]",[1185,1187],[2235,2237],[1185,1187],[2235,2237],[2802,2813],"[firstAddress, orderSize, secondAddress]",[2818,2829]]